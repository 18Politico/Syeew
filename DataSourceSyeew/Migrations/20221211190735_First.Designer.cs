// <auto-generated />
using System;
using DataSourceSyeew;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataSourceSyeew.Migrations
{
    [DbContext(typeof(SyeewContext))]
    [Migration("20221211190735_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataSourceSyeew.Entities.Company", b =>
                {
                    b.Property<Guid>("IdCompany")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeesDimention")
                        .HasColumnType("int");

                    b.Property<int>("ManegementSystem")
                        .HasColumnType("int");

                    b.Property<string>("ProvinceLabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevenueDimention")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfCompany")
                        .HasColumnType("int");

                    b.HasKey("IdCompany");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("DataSourceSyeew.Entities.QuantitativeData", b =>
                {
                    b.Property<Guid>("IdQuantitativeData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("IdCat")
                        .HasColumnType("int");

                    b.Property<Guid>("IdCompany")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdPointOfSale")
                        .HasColumnType("int");

                    b.Property<double>("Iva")
                        .HasColumnType("float");

                    b.Property<double>("Net")
                        .HasColumnType("float");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<double>("RevenueWithIva")
                        .HasColumnType("float");

                    b.Property<string>("ServiceLabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Worked")
                        .HasColumnType("bit");

                    b.HasKey("IdQuantitativeData");

                    b.HasIndex("IdCompany");

                    b.ToTable("QuantitativeDatas");
                });

            modelBuilder.Entity("DataSourceSyeew.Entities.QuantitativeData", b =>
                {
                    b.HasOne("DataSourceSyeew.Entities.Company", "Company")
                        .WithMany("Datas")
                        .HasForeignKey("IdCompany")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DataSourceSyeew.Entities.Company", b =>
                {
                    b.Navigation("Datas");
                });
#pragma warning restore 612, 618
        }
    }
}
